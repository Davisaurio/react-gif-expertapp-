{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","map","img","id","title","images","downsized_medium","gifs","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAmCC,mBAAS,IAA5C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,uBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IAExBR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACtCN,EAAc,MAMlB,4BAEC,uBACGO,KAAO,OACPC,MAAST,EACTU,SApBiB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,c,+BCLjBG,EAAO,uCAAK,WAAMC,GAAN,uBAAAC,EAAA,6DACdC,EADc,kDACkCC,UAAUH,GAD5C,+DAEAI,MAAMF,GAFN,cAEfG,EAFe,gBAGAA,EAAKC,OAHL,uBAGdC,EAHc,EAGdA,KAHc,UAIAA,EAAKC,KAAI,SAAAC,GAC3B,MAAO,CACAC,GAAKD,EAAIC,GACTC,MAAMF,EAAIE,MACVT,IAAKO,EAAIG,OAAOC,iBAAiBX,QARtB,eAIfY,EAJe,yBAWlBA,GAXkB,4CAAL,sDCAPC,EAAc,SAAC,GAAsB,EAApBL,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAErC,OACG,sBAAKc,UAAU,2DAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAMP,IACrB,8BAAKA,EAAL,WCFIQ,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECJwB,SAACA,GAC1B,MACAd,mBAAS,CACPqB,KAAK,GACLa,SAAS,IAHX,mBAAOC,EAAP,KAAcC,EAAd,KAeH,OATAC,qBAAU,WACNxB,EAAQC,GACLwB,MAAM,SAAAC,GACAH,EAAS,CACCf,KAAKkB,EACLL,SAAS,MAE7B,CAACpB,OAEGqB,EDZ8BK,CAAa1B,GAAjCY,EAAb,EAAQL,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACA,6BAAMpB,IACDoB,GAAW,mBAAGJ,UAAU,0BAAb,qBACV,qBAAKA,UAAW,eAAhB,SAEKJ,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEZnBiB,EAAe,WAExB,MAAmCzC,mBAAS,CAAC,SAA7C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAOA,OACO,gCACI,+CACC,cAAC,EAAD,CAAaA,cAAeA,IAC7B,uBAEC,6BAEI2C,EAAWpB,KAAI,SAAAR,GAAQ,OAAG,cAAC,EAAD,CAEtBA,SAAUA,GADJA,Y,MCjB9B6B,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,eAAe,W","file":"static/js/main.cbc1731d.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue]= useState('') ;\r\n    const handleImputChange =(e)=>{\r\n       setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.trim().length>2)\r\n        {\r\n            setCategories(cate => [ inputValue,...cate]);\r\n            setInputValue('');\r\n             //console.log('submit hecho');\r\n        }\r\n       \r\n    } \r\n    return (\r\n        <form onSubmit ={ handleSubmit}>\r\n         NUEVA CATEGORIA \r\n         <input \r\n            type = \"Text\" \r\n            value = {inputValue}\r\n            onChange={handleImputChange} \r\n          />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes   = {\r\n    setCategories: PropTypes.func.isRequired,\r\n    \r\n}","\r\n\r\nexport const getGifs=    async(category) => {\r\n    const  url =`https://api.giphy.com/v1/gifs/search?q= ${encodeURI(category)}&limit=10&api_key=nLejVwrcudzIA8AaMWnr7YBQz4x5A5lZ`;\r\n    const resp =   await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs =   await data.map(img=>{\r\n       return {\r\n              id:  img.id,\r\n              title:img.title,\r\n              url: img.images.downsized_medium.url\r\n       }\r\n    })\r\nreturn gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url}) => {\r\n    \r\n    return (\r\n       <div className=\"card animate__animated animate__wobble animate__rotateIn\">\r\n         <img src={url} alt ={title}/>\r\n         <p >{title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n \r\n    const  {data:images, loading } = useFetchGifs(category);\r\n \r\n    return (\r\n        <>\r\n        <h3>{ category }</h3>    \r\n            {loading && <p className=\"animate__animated flash\" >loading</p> }  \r\n              <div className= \"card-grid   \">                \r\n           {\r\n                   images.map(img=> (\r\n                       <GifGridItem \r\n                       key={img.id}\r\n                       {...img }\r\n                       />                       \r\n                   ))\r\n               }             \r\n        </div> \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category)=> {\r\n   const [state, setState]= \r\n   useState({ \r\n     data:[],\r\n     loading: true      \r\n   });\r\n\r\nuseEffect(() => {  \r\n    getGifs(category).  \r\n       then( imgs=>{                     \r\n             setState({     \r\n                       data:imgs,\r\n                       loading: false\r\n                      });             \r\n}, [category])\r\n}) \r\nreturn state; //{data, loading: true }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n  \r\n    const [categories, setCategories]= useState(['goku']);\r\n     \r\n    \r\n    // const handleAdd= () => {        \r\n    //     setCategories(cate => [...cate, 'HunterXHunter']);\r\n    //   }\r\n\r\n    return (\r\n           <div>\r\n               <h2> GifExpertApp</h2>\r\n                <AddCategory setCategories={setCategories} />\r\n               <hr/>\r\n                  \r\n                <ol>\r\n                {\r\n                    categories.map(category=>(<GifGrid \r\n                        key= {category}\r\n                        category={category}/>)\r\n                        // return <li key= { category }> { category } </li>\r\n                    )\r\n                }\r\n                </ol>          \r\n\r\n                  \r\n           </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}